@model Exampler_ERP.Models.Temp.MaterialIssuancesIndexViewModel

<style>
    .ui-autocomplete {
        z-index: 1000 !important;
    }

    .center-button {
        margin-top: 32px;
        text-align: center;
    }

    .width-button {
        width: 120px;
    }

    .modal-header {
        padding: 1rem 1.5rem;
    }

    .table th,
    .table td {
        width: 20%; /* Adjust this percentage to match the inputs */
    }

    .form-label,
    .form-control,
    .form-select {
        width: 100%; /* Ensures the input elements stretch to match */
    }

    .table .inputcontrol {
        background-color: transparent;
        border: transparent;
    }

    .table .headercontrol {
        background-color: white;
        border: none;
    }

    .table .headerwidth {
        width: 60%;
    }
</style>

<div class="modal fade" id="addMaterialIssuanceModal" tabindex="-1" role="dialog" aria-labelledby="addMaterialIssuanceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="addMaterialIssuanceModalLabel"><i class="fas fa-key me-2"></i>Add Material Issuance</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addMaterialIssuanceForm" enctype="multipart/form-data" asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <!-- Row for Inputs -->
                    <div class="row">

                        <div class="col-2 col-md-12 col-lg-6">
                            <label asp-for="MaterialIssuances.RequisitionID" class="form-label fw-bold">Pending Requisitions List</label>
                            <select asp-for="MaterialIssuances.RequisitionID" asp-items="@(new SelectList(ViewBag.PendingRequisitionsList, "Value", "Text", Model.MaterialIssuances.RequisitionID))" class="form-control form-control-lg" id="requisitionId">
                                <option>Please select</option>
                            </select>
                            <span asp-validation-for="MaterialIssuances.RequisitionID" class="text-danger"></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary width-button" id="fetchData">Fetch Data</button>
                    <!-- Table for Added Rows -->
                    <div class="table-responsive mb-3">
                        <table id="MaterialIssuanceTable" class="table">
                            <thead>
                                <tr>
                                    <th>Item</th>
                                    <th>Requisition Quantity</th>
                                    <th>Issuance Quantity</th>
                                    <th>Balance Quantity</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Dynamic rows will be appended here -->
                            </tbody>
                        </table>

                        @* <table class="table table-bordered" id="MaterialIssuanceTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="headercontrol headerwidth">
                                        <div class="col-md-12">
                                            <label for="ItemName" class="form-label fw-bold">Item Name</label>
                                            <select id="ItemName" name="ItemName" class="form-select">
                                                <option value="">Select Item</option>
                                                @foreach (var type in ViewBag.ItemList)



                                                {
                                                    <option value="@type.Value">@type.Text</option>
                                                }
                                            </select>
                                        </div>
                                    </th>
                                    <th class="headercontrol">
                                        <div class="col-md-12">
                                            <label for="RequisitionQuantity" class="form-label fw-bold">Requisition Quantity</label>
                                            <input type="text" id="RequisitionQuantity" name="RequisitionQuantity" class="form-control" />
                                        </div>
                                    </th>
                                    <th class="headercontrol">
                                        <div class="col-md-12">
                                            <label for="IssuanceQuantity" class="form-label fw-bold">Issuance Quantity</label>
                                            <input type="text" id="IssuanceQuantity" name="IssuanceQuantity" class="form-control" />
                                        </div>
                                    </th>
                                    <th class="headercontrol">
                                        <div class="col-md-12">
                                            <label for="BalanceQuantity" class="form-label fw-bold">Balance Quantity</label>
                                            <input type="date" id="BalanceQuantity" name="BalanceQuantity" class="form-control" />
                                        </div>
                                    </th>
                                    <th class="headercontrol">
                                        <div class="col-md-12" style="text-align-last: center;">
                                            <button type="button" class="btn btn-primary add-row width-button">Add</button>
                                        </div>
                                    </th>
                                </tr>
                                <tr><th style="border: none;"></th></tr>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Requisition Quantity</th>
                                    <th>Issuance Quantity</th>
                                    <th>Balance Quantity</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.MaterialIssuances.MaterialIssuanceDetails != null && Model.MaterialIssuances.MaterialIssuanceDetails.Count > 0)

                                {

                                    for (int i = 0; i < Model.MaterialIssuances.MaterialIssuanceDetails.Count; i++)

                                    {
                                        <tr>
                                            <td>
                                                <select class="form-select" name="MaterialIssuances.MaterialIssuanceDetails[@i].ItemID">
                                                    <option value="">Select Item</option>
                                                    @foreach (var type in ViewBag.ItemNameList)

                                                    {
                                                        <option value="@type.Value">@type.Text</option>
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="MaterialIssuances.MaterialIssuanceDetails[@i].RequisitionQuantity" value="@Model.MaterialIssuances.MaterialIssuanceDetails[i].RequisitionQuantity" />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="MaterialIssuances.MaterialIssuanceDetails[@i].IssuanceQuantity" value="@Model.MaterialIssuances.MaterialIssuanceDetails[i].IssuanceQuantity" />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control" name="MaterialIssuances.MaterialIssuanceDetails[@i].BalanceQuantity" value="@Model.MaterialIssuances.MaterialIssuanceDetails[i].BalanceQuantity" />
                                            </td>
                                            <td style="text-align-last: center;">
                                                <button type="button" class="btn btn-sm btn-danger remove-row width-button">Remove</button>
                                            </td>
                                        </tr>
                                    }

                                }

                            </tbody>
                        </table> *@
                    </div>

                    <!-- Remarks Section -->
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <label asp-for="MaterialIssuances.Remarks" class="form-label fw-bold">Remarks</label>
                            <textarea asp-for="MaterialIssuances.Remarks" class="form-control" rows="3"></textarea>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveNewMaterialIssuance" class="btn btn-success">Save</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Fetch data when clicking the button
        $('#requisitionId').change(function () {
            const requisitionId = $(this).val().trim();
            debugger;
            // Validate if a value is selected
            if (!requisitionId) {
                alert("Please select a valid Requisition ID.");
                return;
            }

            // AJAX call to fetch data when the selection changes
            $.ajax({
                url: '/MaterialIssuance/GetRequisitionDetails',
                type: 'GET',
                data: { requisitionId: requisitionId },
                success: function (response) {
                    const tableBody = $('#MaterialIssuanceTable tbody');
                    tableBody.empty(); // Clear previous data
                    debugger;
                    if (response.success) {
                        const data = response.data; // Assuming response.data contains the array
                        console.log(response.data);
                        debugger;
                        if (data && data.length > 0) {
                            data.forEach((row, rowIndex) => {
                                const itemID = row.itemID;
                                const itemName = row.itemName;
                                const requisitionQuantity = parseFloat(row.quantity) || 0;
                                const issuanceQuantity = 0;
                                const balanceQuantity = requisitionQuantity;

                                // Create a dynamic row
                                const dynamicRow = `
                                <tr>
                                    <td class="col-md-4">
                                        <input type="hidden" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].ItemID" value="${itemID}" />
                                        <input type="text" class="form-control inputcontrol" value="${itemName}" readonly />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].RequisitionQuantity" value="${requisitionQuantity}" readonly />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].IssuanceQuantity" value="${issuanceQuantity}" readonly />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].BalanceQuantity" value="${balanceQuantity}" readonly />
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-danger remove-row width-button">Remove</button>
                                    </td>
                                </tr>`;
                                // Append the row to the table body
                                tableBody.append(dynamicRow);
                            });
                        } else {
                            alert("No data found for the selected Requisition ID.");
                        }
                    } else {
                        alert(response.message || "Failed to fetch data.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    alert("An error occurred while fetching data. Please try again.");
                }
            });
        });



        // Add a new row to the Material Issuance table
        $(document).on('click', '.add-row', function () {
            const itemName = $('#ItemName').val();
            const itemText = $('#ItemName option:selected').text();
            const requisitionQuantity = parseFloat($('#RequisitionQuantity').val()) || 0;
            const issuanceQuantity = parseFloat($('#IssuanceQuantity').val()) || 0;
            const balanceQuantity = parseFloat($('#BalanceQuantity').val()) || 0;

            // Validate inputs
            if (!itemName || requisitionQuantity <= 0 || balanceQuantity <= 0) {
                alert('Please fill out all required fields: Item Name, Requisition Quantity, and Balance Quantity.');
                return;
            }

            const tableBody = $('#MaterialIssuanceTable tbody');
            const rowCount = tableBody.find('tr').length;

            const dynamicRow = `
                    <tr>
                        <td class="col-md-4">
                            <input type="hidden" name="MaterialIssuances.MaterialIssuanceDetails[${rowCount}].ItemID" value="${itemName}" />
                            <input type="text" class="form-control inputcontrol" value="${itemText}" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowCount}].RequisitionQuantity" value="${requisitionQuantity}" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowCount}].IssuanceQuantity" value="${issuanceQuantity}" readonly />
                        </td>
                        <td>
                            <input type="text" class="form-control inputcontrol" name="MaterialIssuances.MaterialIssuanceDetails[${rowCount}].BalanceQuantity" value="${balanceQuantity}" readonly />
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger remove-row width-button">Remove</button>
                        </td>
                    </tr>`;

            tableBody.append(dynamicRow);

            // Clear input fields
            $('#ItemName').val('');
            $('#RequisitionQuantity').val('');
            $('#IssuanceQuantity').val('');
            $('#BalanceQuantity').val('');
        });

        // Remove a row from the Material Issuance table
        $(document).on('click', '.remove-row', function () {
            $(this).closest('tr').remove();

            // Update name attributes for proper binding
            $('#MaterialIssuanceTable tbody tr').each(function (index) {
                $(this).find('input, select').each(function () {
                    const name = $(this).attr('name');
                    if (name) {
                        const updatedName = name.replace(/\[\d+\]/, `[${index}]`);
                        $(this).attr('name', updatedName);
                    }
                });
            });
        });
    });
</script>
