@model Exampler_ERP.Models.Temp.MaterialIssuancesIndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<input type="hidden" asp-for="MaterialIssuances.RequisitionID" />
<input type="hidden" asp-for="MaterialIssuances.FinalApprovalID" />
<input type="hidden" asp-for="MaterialIssuances.ProcessTypeApprovalID" />
<input type="hidden" asp-for="MaterialIssuances.IssuanceStatusTypeID" />

<!-- Table for Added Rows -->
<div class="mb-3">
    <div class="row">

        <div class="col-2 col-md-12 col-lg-6">
            <input type="text" asp-for="MaterialIssuances.IssuanceID" id="issuanceID" name="issuanceID" />
           
        </div>
    </div>
    <!-- Table for Added Rows -->
    <div class="table-responsive mb-3">
        <table id="MaterialIssuanceTable" class="table">
            <thead>
                <tr>
                    <th>@Localizer["lbl_Item"]</th>
                    <th>@Localizer["lbl_RequisitionQuantity"]</th>
                    <th>@Localizer["lbl_IssuanceQuantity"]</th>
                    <th>@Localizer["lbl_BalanceQuantity"]</th>
                    <th>@Localizer["lbl_Action"]</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dynamic rows will be appended here -->
            </tbody>
        </table>

    </div>

    <!-- Remarks Section -->
    <div class="row mb-3">
        <div class="col-md-12">
            <label asp-for="MaterialIssuances.Remarks" class="form-label fw-bold">@Localizer["lbl_Remarks"]</label>
            <textarea asp-for="MaterialIssuances.Remarks" class="form-control" rows="3"></textarea>
        </div>
    </div>
</div>
<script>
       $(document).ready(function () {
        function fetchRequisitionDetails(issuanceID) {
            if (!issuanceID) {
                alert("Please select a valid Issuance ID.");
                return;
            }
            $.ajax({
                url: '/MaterialIssuance/GetIssuanceDetails',
                type: 'GET',
                data: { issuanceID: issuanceID },
                success: function (response) {
                    const tableBody = $('#MaterialIssuanceTable tbody');
                    tableBody.empty();
                    if (response.success && response.data.length > 0) {
                        response.data.forEach((row, rowIndex) => {
                            const dynamicRow = `
                                <tr>
                                    <td>
                                        <input type="hidden" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].ItemID" value="${row.itemID}" />
                                        <input type="text" class="form-control" value="${row.itemName}" readonly />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].RequisitionQuantity" value="${row.requisitionQuantity}" readonly />
                                    </td>
                                    <td>
                                        <input type="number" class="form-control issuance-quantity" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].IssuanceQuantity" value="${row.issuanceQuantity}" />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" name="MaterialIssuances.MaterialIssuanceDetails[${rowIndex}].BalanceQuantity" value="${row.balanceQuantity}" readonly />
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-danger remove-row">@Localizer["lbl_Remove"]</button>
                                    </td>
                                </tr>`;
                            tableBody.append(dynamicRow);
                        });
                    } else {
                        alert("No data found for the selected Issuance ID.");
                    }
                },
                error: function () {
                    alert("An error occurred while fetching data. Please try again.");
                }
            });
        }

        // Page Load par IssuanceID check karke data fetch karna
        let issuanceID = $('#issuanceID').val();
        if (issuanceID) {
            fetchRequisitionDetails(issuanceID);
        }

        // Dropdown change event
        $('#issuanceID').change(function () {
            fetchRequisitionDetails($(this).val());
        });
    });

</script>

