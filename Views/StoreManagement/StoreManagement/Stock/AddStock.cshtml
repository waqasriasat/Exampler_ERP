@model Exampler_ERP.Models.Temp.StocksIndexViewModel

<div class="modal fade" id="addStockModal" tabindex="-1" role="dialog" aria-labelledby="addStockModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="addStockModalLabel">
                    <i class="fas fa-key me-2"></i>
                    Add New Stock
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

            </div>
            <div class="modal-body">
                <form id="addStockForm">
                    <div class="row">

                        <div class="col-2 col-md-12 col-lg-6">
                            <label asp-for="Stocks.ItemID" class="form-label fw-bold">Item Name</label>
                            <select asp-for="Stocks.ItemID" asp-items="@(new SelectList(ViewBag.ItemList, "Value", "Text", Model.Stocks.ItemID))" class="form-control form-control-lg">
                                <option>Please select</option>
                            </select>
                            <span asp-validation-for="Stocks.ItemID" class="text-danger"></span>
                        </div>
                        <div class="col-2 col-md-12 col-lg-3">
                            <label asp-for="Stocks.UnitTypeID" class="form-label fw-bold">Unit</label>
                            <select asp-for="Stocks.UnitTypeID" asp-items="@(new SelectList(ViewBag.UnitList, "Value", "Text", Model.Stocks.UnitTypeID))" class="form-control form-control-lg">
                                <option>Please select</option>
                            </select>
                            <span asp-validation-for="Stocks.UnitTypeID" class="text-danger"></span>
                        </div>
                        <div class="col-2 col-md-12 col-lg-3">
                            <label asp-for="Stocks.VendorID" class="form-label fw-bold">Vendor Name</label>
                            <select asp-for="Stocks.VendorID" asp-items="@(new SelectList(ViewBag.VendorList, "Value", "Text", Model.Stocks.VendorID))" class="form-control form-control-lg">
                                <option>Please select</option>
                            </select>
                            <span asp-validation-for="Stocks.VendorID" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-2 col-md-12 col-lg-6">
                            <div class="row">
                                <div class="col-6">
                                    <label asp-for="Stocks.Quantity" class="form-label fw-bold">Quantity</label>
                                    <input asp-for="Stocks.Quantity" type="text" class="form-control form-control-lg" />
                                </div>
                                <div class="col-6">
                                    <label asp-for="Stocks.LotNumber" class="form-label fw-bold">Lot Number</label>
                                    <input asp-for="Stocks.LotNumber" type="text" class="form-control form-control-lg" />
                                </div>
                                <div class="col-6">
                                    <label asp-for="Stocks.PONo" class="form-label fw-bold">PO No</label>
                                    <input asp-for="Stocks.PONo" type="text" class="form-control form-control-lg" />
                                </div>
                                <div class="col-6">
                                    <label asp-for="Stocks.GRNNo" class="form-label fw-bold">GRN No</label>
                                    <input asp-for="Stocks.GRNNo" type="text" class="form-control form-control-lg" />
                                </div>
                                <div class="col-6">
                                    <label asp-for="Stocks.DCNo" class="form-label fw-bold">DC No</label>
                                    <input asp-for="Stocks.DCNo" type="text" class="form-control form-control-lg" />
                                </div>
                                <div class="col-6">
                                    <label asp-for="Stocks.InvoiceNo" class="form-label fw-bold">Invoice No</label>
                                    <input asp-for="Stocks.InvoiceNo" type="text" class="form-control form-control-lg" />
                                </div>
                            </div>
                        </div>
                        <div class="col-2 col-md-12 col-lg-6">
                            <div class="component-type-container">
                                @for (var i = 0; i < Model.StockComponents.Count; i++)



                                {
                                    <div class="row">
                                        <div class="col-12">
                                            <input type="hidden" name="Stocks.StockComponents[@i].ItemComponentTypeID" value="@Model.StockComponents[i].ItemComponentTypeID" />
                                            <label class="form-label fw-bold">@Model.StockComponents[i].ItemComponentTypeID</label>
                                            <input type="text" class="form-control form-control-lg" name="Stocks.StockComponents[@i].ItemComponentValue" value="@Model.StockComponents[i].ItemComponentValue" placeholder="Enter value" />
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="Close">Close</button>
                <button type="button" class="btn btn-success" id="saveNewStock">Save</button>
            </div>
        </div>
    </div>
</div>
<script>
    // $(document).ready(function () {
    //     $('#addStockForm select[name="Stocks.ItemID"]').change(function () {
    //         var selectedItemID = $(this).val();
    //         if (selectedItemID) {
    //             $.ajax({
    //                 url: '/Stock/GetItemComponents',
    //                 type: 'GET',
    //                 data: { itemId: selectedItemID },
    //                 success: function (response) {
    //                     var componentContainer = $('#addStockForm .component-type-container');
    //                     componentContainer.html(''); // Clear previous components

    //                     // Populate new components
    //                     response.forEach(function (component, index) {
    //                         var componentHtml = `
    //         <div class="row">
    //             <div class="col-12">
    //                 <input type="hidden" name="Stocks.StockComponents[${index}].ItemComponentTypeID" value="${component.itemTypeID}" />
    //                 <label class="form-label fw-bold">${component.itemTypeName}</label>
    //                 <input type="text" class="form-control form-control-lg" name="Stocks.StockComponents[${index}].ItemComponentValue" placeholder="Enter value" />
    //             </div>
    //         </div>`;
    //                         componentContainer.append(componentHtml);
    //                     });
    //                 },
    //                 error: function (xhr) {
    //                     console.error('Error fetching item components:', xhr.responseText);
    //                 }
    //             });
    //         }
    //     });

    // });

    $(document).ready(function () {
        $('#addStockForm select[name="Stocks.ItemID"]').change(function () {
            var selectedItemID = $(this).val();
            if (selectedItemID) {
                $.ajax({
                    url: '/Stock/GetItemComponents',
                    type: 'GET',
                    data: { itemId: selectedItemID },
                    success: function (response) {
                        var componentContainer = $('#addStockForm .component-type-container');
                        componentContainer.html(''); // Clear previous components

                        // Populate new components with proper data type handling
                        response.forEach(function (component, index) {
                            var inputType = "text"; // Default input type
                            var additionalAttributes = ""; // Additional attributes for validation

                            // Set input type based on ItemDataType
                            switch (component.itemDataType) {
                                case 1: // int
                                    inputType = "number";
                                    additionalAttributes = `step="1"`;
                                    break;
                                case 2: // date
                                    inputType = "date";
                                    break;
                                case 3: // string
                                    inputType = "text";
                                    break;
                                case 4: // decimal
                                    inputType = "number";
                                    additionalAttributes = `step="0.01"`;
                                    break;
                            }

                            // Create HTML for the component
                            var componentHtml = `
                                <div class="row">
                                    <div class="col-12">
                                        <input type="hidden" name="Stocks.StockComponents[${index}].ItemComponentTypeID" value="${component.itemTypeID}" />
                                        <label class="form-label fw-bold">${component.itemTypeName}</label>
                                        <input type="${inputType}" class="form-control form-control-lg"
                                               name="Stocks.StockComponents[${index}].ItemComponentValue"
                                               placeholder="Enter value" ${additionalAttributes} />
                                    </div>
                                </div>`;
                            componentContainer.append(componentHtml);
                        });
                    },
                    error: function (xhr) {
                        console.error('Error fetching item components:', xhr.responseText);
                    }
                });
            }
        });
    });


</script>
