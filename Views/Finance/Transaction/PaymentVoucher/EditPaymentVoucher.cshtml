@model Exampler_ERP.Models.Temp.PaymentVoucherIndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<style>
    .ui-autocomplete {
        z-index: 1000 !important;
    }
</style>

<div class="modal fade" id="editVoucherModal" tabindex="-1" role="dialog" aria-labelledby="editVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editVoucherModalLabel"><i class="fas fa-key me-2"></i>Edit Payment Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editVoucherForm" enctype="multipart/form-data" asp-action="Edit" method="post">
                    @Html.Partial("~/Views/Finance/Transaction/PaymentVoucher/_EditPaymentVoucher.cshtml", Model)
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["lbl_Close"]</button>
                <button type="button" id="saveChanges" class="btn btn-success">Save Voucher</button>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        function calculateTotals() {
            let totalDebit = 0;
            let totalCredit = 0;

            $('#PaymentVoucherTable tbody tr').each(function () {
                const debit = parseFloat($(this).find('.debit').val()) || 0;
                const credit = parseFloat($(this).find('.credit').val()) || 0;

                totalDebit += debit;
                totalCredit += credit;
            });

            $('#TotalDrAmt').val(totalDebit.toFixed(2));
            $('#TotalCrAmt').val(totalCredit.toFixed(2));

            if (totalDebit !== totalCredit) {
                $('#saveNewVoucher').prop('disabled', true);
            } else {
                $('#saveNewVoucher').prop('disabled', false);
            }
        }

        $(document).on('input', '.debit, .credit', calculateTotals);

        // Add rows based on Debit, Credit, and Amount fields
        $(document).on('click', '.update-row', function () {

            const debitHead = $('#HeadofAccountid_Debit').val();
            const creditHead = $('#HeadofAccountid_Credit').val();
            const incometaxHead = $('#HeadofAccountid_IncomeTaxID').val();
            const saletaxHead = $('#HeadofAccountid_SaleTaxID').val();
            const amount = parseFloat($('#InstrumentAmount').val()) || 0;

            if (!debitHead || !creditHead || amount === 0) {
                alert('Please fill out all required fields: Debit Account, Credit Account, and Instrument Amount.');
                return;
            }

            const incomeTaxValue = parseFloat($('#IncomeTaxValue').val()) || 0;
            const saleTaxValue = parseFloat($('#SaleTaxValue').val()) || 0;

            // Initialize the tax amounts
            let incomeTaxAmount = 0;
            let saleTaxAmount = 0;

            // Calculate Income Tax Amount
            if (incomeTaxValue && creditHead && amount !== 0) {
                incomeTaxAmount = (amount * incomeTaxValue) / 100;
                $('#IncomeTaxAmount').val(incomeTaxAmount.toFixed(2));
            }

            // Calculate Sale Tax Amount
            if (saleTaxValue && creditHead && amount !== 0) {
                saleTaxAmount = (amount * saleTaxValue) / 100;
                $('#SaleTaxAmount').val(saleTaxAmount.toFixed(2));
            }

            // Calculate Remaining Amount
            const remainingAmount = amount - incomeTaxAmount - saleTaxAmount;
            $('#RemainingAmount').val(remainingAmount.toFixed(2));


            const tableBody = $('#PaymentVoucherTable tbody');

            tableBody.empty();

            const rowCount = tableBody.find('tr').length;

            // Add Debit row
            const debitRow = `<tr>
            <td>
                <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount}].DRCR">
                    <option value="1" selected>Debit</option>
                </select>
            </td>
            <td>
                <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount}].HeadofAccount_FiveID">
                    <option value="${debitHead}" selected>${$('#HeadofAccountid_Debit option:selected').text()}</option>
                </select>
            </td>
            <td>
                <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount}].DrAmt" value="${amount.toFixed(2)}" />
            </td>
            <td>
                <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount}].CrAmt" value="0" readonly />
            </td>
        </tr>`;

            // Add Credit row
            const creditRow = `<tr>
            <td>
                <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount + 1}].DRCR" >
                    <option value="2" selected>Credit</option>
                </select>
            </td>
            <td>
                <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount + 1}].HeadofAccount_FiveID">
                    <option value="${creditHead}" selected>${$('#HeadofAccountid_Credit option:selected').text()}</option>
                </select>
            </td>
            <td>
                <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount + 1}].DrAmt" value="0" readonly />
            </td>
            <td>
                <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount + 1}].CrAmt" value="${remainingAmount.toFixed(2)}" />
            </td>
        </tr>`;
           
            // Add Income Tax row
            const incometaxRow = `<tr>
                    <td>
                        <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount + 2}].DRCR" >
                            <option value="2" selected>Credit</option>
                        </select>
                    </td>
                    <td>
                        <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount + 2}].HeadofAccount_FiveID">
                            <option value="${incometaxHead}" selected>${$('#HeadofAccountid_IncomeTaxID option:selected').text()}</option>
                        </select>
                    </td>
                    <td>
                        <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount + 2}].DrAmt" value="0" readonly />
                    </td>
                    <td>
                        <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount + 2}].CrAmt" value="${incomeTaxAmount.toFixed(2)}" />
                    </td>
                </tr>`;
       
                // Add Sale Tax row
                const saletaxRow = `<tr>
            <td>
                <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount + 3}].DRCR" >
                    <option value="2" selected>Credit</option>
                </select>
            </td>
            <td>
                <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount + 3}].HeadofAccount_FiveID">
                    <option value="${saletaxHead}" selected>${$('#HeadofAccountid_SaleTaxID option:selected').text()}</option>
                </select>
            </td>
            <td>
                <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount + 3}].DrAmt" value="0" readonly />
            </td>
            <td>
                <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount + 3}].CrAmt" value="${saleTaxAmount.toFixed(2)}" />
            </td>
        </tr>`;
            
            // Append rows to the table
            
            if (incomeTaxValue && incometaxHead && saleTaxValue && saletaxHead && amount !== 0) {
                // Income Tax aur Sales Tax dono ke rows add karega
                tableBody.append(debitRow + creditRow + incometaxRow + saletaxRow);
            } else if (incomeTaxValue && incometaxHead && amount !== 0) {
                // Sirf Income Tax ka row add karega
                tableBody.append(debitRow + creditRow + incometaxRow);
            } else if (saleTaxValue && saletaxHead && amount !== 0) {
                // Sirf Sales Tax ka row add karega
                tableBody.append(debitRow + creditRow + saletaxRow);
            } else {
                // Sirf Debit aur Credit rows add karega
                tableBody.append(debitRow + creditRow);
            }

            // Disable select fields by adding a class
            $('#PaymentVoucherTable tbody')
                .find('input, select')
                .addClass('disabled-select')
                .css('pointer-events', 'none')
                .css('background-color', '#e9ecef');
            calculateTotals();
        });



    });
    $(document).ready(function () {
        const firstRow = $('#PaymentVoucherTable tbody tr').eq(0);
        const secondRow = $('#PaymentVoucherTable tbody tr').eq(1);
        
        const rows = $('#PaymentVoucherTable tbody .transaction-account');
        const debitHeadValue = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(0)
            .find('option:selected')
            .val();
        const debitHeadText = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(0)
            .find('option:selected')
            .text();
        const creditHeadValue = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(1)
            .find('option:selected')
            .val();
        const creditHeadText = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(1)
            .find('option:selected')
            .text();
        const incometaxHeadValue = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(2)
            .find('option:selected')
            .val();
        const incometaxHeadText = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(2)
            .find('option:selected')
            .text();
        const saletaxHeadValue = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(3)
            .find('option:selected')
            .val();
        const saletaxHeadText = $('#PaymentVoucherTable tbody .transaction-account')
            .eq(3)
            .find('option:selected')
            .text();
        const instrumentAmount = parseFloat(
            $('#PaymentVoucherTable tbody .debit').eq(0).val()
        ) || 0;
        
        // Set the form values
        $('#HeadofAccountid_Debit').val(debitHeadValue).change();
        $('#HeadofAccountid_Debit option:selected').text(debitHeadText);

        $('#HeadofAccountid_Credit').val(creditHeadValue).change();
        $('#HeadofAccountid_Credit option:selected').text(creditHeadText);

        $('#HeadofAccountid_IncomeTaxID').val(incometaxHeadValue).change();
        $('#HeadofAccountid_IncomeTaxID option:selected').text(incometaxHeadText);

        $('#HeadofAccountid_SaleTaxID').val(saletaxHeadValue).change();
        $('#HeadofAccountid_SaleTaxID option:selected').text(saletaxHeadText);

        $('#InstrumentAmount').val(instrumentAmount.toFixed(2));
        
        
        $('#PaymentVoucherTable tbody')
            .find('input, select')
            .addClass('disabled-select')
            .css('pointer-events', 'none')
            .css('background-color', '#e9ecef');
        calculateTotals();
        function calculateTotals() {
            let totalDebit = 0;
            let totalCredit = 0;

            $('#PaymentVoucherTable tbody tr').each(function () {
                const debit = parseFloat($(this).find('.debit').val()) || 0;
                const credit = parseFloat($(this).find('.credit').val()) || 0;

                totalDebit += debit;
                totalCredit += credit;
            });

            $('#TotalDrAmt').val(totalDebit.toFixed(2));
            $('#TotalCrAmt').val(totalCredit.toFixed(2));

            if (totalDebit !== totalCredit) {
                $('#saveNewVoucher').prop('disabled', true);
            } else {
                $('#saveNewVoucher').prop('disabled', false);
            }
        }
    });
</script>
