@model Exampler_ERP.Models.Temp.ReceivedVoucherIndexViewModel

<style>
    .ui-autocomplete {
        z-index: 1000 !important;
    }
</style>

<div class="modal fade" id="editVoucherModal" tabindex="-1" role="dialog" aria-labelledby="editVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editVoucherModalLabel"><i class="fas fa-key me-2"></i>Edit Received Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editVoucherForm" enctype="multipart/form-data" asp-action="Edit" method="post">
                    @Html.Partial("~/Views/Finance/Transaction/ReceivedVoucher/_EditReceivedVoucher.cshtml", Model)
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveChanges" class="btn btn-success">Save Voucher</button>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        function calculateTotals() {
            let totalcredit = 0;
            let totaldebit = 0;

            $('#ReceivedVoucherTable tbody tr').each(function () {
                const credit = parseFloat($(this).find('.credit').val()) || 0;
                const debit = parseFloat($(this).find('.debit').val()) || 0;

                totalcredit += credit;
                totaldebit += debit;
            });

            $('#TotalDrAmt').val(totalcredit.toFixed(2));
            $('#TotalCrAmt').val(totaldebit.toFixed(2));

            if (totalcredit !== totaldebit) {
                $('#saveNewVoucher').prop('disabled', true);
            } else {
                $('#saveNewVoucher').prop('disabled', false);
            }
        }

        $(document).on('input', '.credit, .debit', calculateTotals);

        // Add rows based on credit, debit, and Amount fields
        $(document).on('click', '.update-row', function () {
            const creditHead = $('#HeadofAccountid_credit').val();
            const debitHead = $('#HeadofAccountid_debit').val();
            const amount = parseFloat($('#InstrumentAmount').val()) || 0;

            if (!creditHead || !debitHead || amount === 0) {
                alert('Please fill out all required fields: credit Account, debit Account, and Instrument Amount.');
                return;
            }

            const tableBody = $('#ReceivedVoucherTable tbody');

            tableBody.empty();

            const rowCount = tableBody.find('tr').length;

           
            // Add debit row
            const debitRow = `<tr>
                    <td>
                        <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount}].DRCR">
                            <option value="1" selected>Debit</option>
                        </select>
                    </td>
                    <td>
                        <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount}].HeadofAccount_FiveID">
                            <option value="${debitHead}" selected>${$('#HeadofAccountid_debit option:selected').text()}</option>
                        </select>
                    </td>
                    
                    <td>
                            <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount}].DrAmt" value="${amount.toFixed(2)}" />
                    </td>
                        <td>
                                <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount}].CrAmt" value="0" readonly />
                        </td>
                </tr>`;
            // Add credit row
            const creditRow = `<tr>
                        <td>
                                <select class="form-select transaction-Type" name="Vouchers.VoucherDetails[${rowCount + 1}].DRCR">
                                <option value="2" selected>Credit</option>
                            </select>
                        </td>
                        <td>
                                <select class="form-select transaction-account" name="Vouchers.VoucherDetails[${rowCount + 1}].HeadofAccount_FiveID">
                                <option value="${creditHead}" selected>${$('#HeadofAccountid_credit option:selected').text()}</option>
                            </select>
                        </td>

                        <td>
                                    <input type="text" class="form-control debit" name="Vouchers.VoucherDetails[${rowCount + 1}].DrAmt" value="0" readonly />
                        </td>
                            <td>
                                        <input type="text" class="form-control credit" name="Vouchers.VoucherDetails[${rowCount + 1}].CrAmt" value="${amount.toFixed(2)}" />
                            </td>
                    </tr>`;

            // Append rows to the table
            tableBody.append(debitRow + creditRow);

            // Hide the add button
            $('.update-row').hide();
            // $('#ReceivedVoucherTable tbody')
            //     .find('input, select')
            //     .prop('readonly', true);

            // Disable select fields by adding a class
            $('#ReceivedVoucherTable tbody')
                .find('input, select')
                .addClass('disabled-select')
                .css('pointer-events', 'none')
                .css('background-color', '#e9ecef');
            calculateTotals();
        });
      


    });
    $(document).ready(function () {
        const firstRow = $('#ReceivedVoucherTable tbody tr').eq(0);
        const secondRow = $('#ReceivedVoucherTable tbody tr').eq(1);

        const rows = $('#ReceivedVoucherTable tbody .transaction-account');
        const creditHeadValue = $('#ReceivedVoucherTable tbody .transaction-account')
            .eq(3)
            .find('option:selected')
            .val();
        const creditHeadText = $('#ReceivedVoucherTable tbody .transaction-account')
            .eq(3)
            .find('option:selected')
            .text();

        const debitHeadValue = $('#ReceivedVoucherTable tbody .transaction-account')
            .eq(1)
            .find('option:selected')
            .val();
        const debitHeadText = $('#ReceivedVoucherTable tbody .transaction-account')
            .eq(1)
            .find('option:selected')
            .text();
        const instrumentAmount = parseFloat(
            $('#ReceivedVoucherTable tbody .debit').eq(0).val()
        ) || 0;

        // Set the form values
        $('#HeadofAccountid_credit').val(creditHeadValue).change();
        $('#HeadofAccountid_credit option:selected').text(creditHeadText);

        $('#HeadofAccountid_debit').val(debitHeadValue).change();
        $('#HeadofAccountid_debit option:selected').text(debitHeadText);

        $('#InstrumentAmount').val(instrumentAmount.toFixed(2));
        if ($('#ReceivedVoucherTable tbody tr').eq(2).length > 0) {
            $('#ReceivedVoucherTable tbody tr').eq(2).remove();
        }
        // $('#ReceivedVoucherTable tbody')
        //     .find('input, select')
        //     .prop('readonly', true);

        // Disable select fields by adding a class
        $('#ReceivedVoucherTable tbody')
            .find('input, select')
            .addClass('disabled-select')
            .css('pointer-events', 'none')
            .css('background-color', '#e9ecef');
        calculateTotals();
        function calculateTotals() {
            let totalcredit = 0;
            let totaldebit = 0;

            $('#ReceivedVoucherTable tbody tr').each(function () {
                const credit = parseFloat($(this).find('.credit').val()) || 0;
                const debit = parseFloat($(this).find('.debit').val()) || 0;

                totalcredit += credit;
                totaldebit += debit;
            });

            $('#TotalDrAmt').val(totalcredit.toFixed(2));
            $('#TotalCrAmt').val(totaldebit.toFixed(2));

            if (totalcredit !== totaldebit) {
                $('#saveNewVoucher').prop('disabled', true);
            } else {
                $('#saveNewVoucher').prop('disabled', false);
            }
        }
    });
</script>
