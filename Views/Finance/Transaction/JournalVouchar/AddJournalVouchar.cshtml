@model Exampler_ERP.Models.FI_Vouchar

<style>
    .ui-autocomplete {
        z-index: 1000 !important;
    }
</style>
<div class="modal fade" id="addVoucharModal" tabindex="-1" role="dialog" aria-labelledby="addVoucharModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="addVoucharModalLabel"><i class="fas fa-key me-2"></i>Add Journal Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addVoucherForm" method="post">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="VoucharTypeID" class="form-label fw-bold">Voucher Type</label>
                            <select asp-for="VoucharTypeID" class="form-select form-select-lg">
                                <option value="">Select Voucher Type</option>
                                @foreach (var type in ViewBag.VoucharTypeList)

                                {
                                    <option value="@type.Value">@type.Text</option>
                                }
                            </select>
                        </div>

                    </div>

                    <div class="row mb-3">
                        <div class="col-md-3">
                            <label for="PONo" class="form-label fw-bold">PO No</label>
                            <input type="text" class="form-control form-control-lg" id="PONo" name="PONo" value="@Model.PONo" />
                        </div>
                        <div class="col-md-3">
                            <label for="GRNNo" class="form-label fw-bold">GRN No</label>
                            <input type="text" class="form-control form-control-lg" id="GRNNo" name="GRNNo" value="@Model.GRNNo" />
                        </div>
                        <div class="col-md-3">
                            <label for="DCNo" class="form-label fw-bold">DC No</label>
                            <input type="text" class="form-control form-control-lg" id="DCNo" name="DCNo" value="@Model.DCNo" />
                        </div>
                        <div class="col-md-3">
                            <label for="InvoiceNo" class="form-label fw-bold">Invoice No</label>
                            <input type="text" class="form-control form-control-lg" id="InvoiceNo" name="InvoiceNo" value="@Model.InvoiceNo" />
                        </div>
                        <div class="col-md-12">
                            <label asp-for="Description" class="form-label fw-bold">Description</label>
                            <textarea asp-for="Description" class="form-control form-control-lg" rows="3"></textarea>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered" id="JournalVoucherTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Transaction Type</th>
                                    <th>Transaction Account</th>
                                    <th>Debit Amount</th>
                                    <th>Credit Amount</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.VoucharDetails.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <select class="form-select transaction-account">
                                                <option value="">Select Type</option>
                                                @foreach (var type in ViewBag.TransactionTypeList)

                                                {
                                                    <option value="@type.Value">@type.Text</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            <input asp-for="@Model.VoucharDetails[i].HeadofAccount_FiveID" id="HeadofAccount_FiveID" class="form-control form-control-lg" />
                                            <input asp-for="@Model.VoucharDetails[i].HeadofAccount_FiveID" id="HeadofAccount_FiveName" class="form-control form-control-lg" type="text" />
                                        </td>

                                        <td>
                                            <input asp-for="@Model.VoucharDetails[i].DrAmt" id="DrAmt" class="form-control debit" />
                                        </td>
                                        <td>
                                            <input asp-for="@Model.VoucharDetails[i].CrAmt" id="CrAmt" class="form-control credit" />
                                        </td>
                                        <td>
                                            <button id="btndummy-@i" type="button" class="btn btn-sm invisible">Dummy</button>
                                            <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible"
                                                    onclick="AddItem(this)">
                                                Add
                                            </button>
                                        
                                            <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible"
                                                    onclick="DeleteItem(this)">
                                                Remove
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Total Debit Amount</label>
                            <input id="TotalDrAmt" class="form-control form-control-lg" readonly />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-bold">Total Credit Amount</label>
                            <input id="TotalCrAmt" class="form-control form-control-lg" readonly />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveNewVoucher" class="btn btn-success">Save Voucher</button>
                <input type="hidden" id="hdnLastIndex" value="0" />
            </div>
        </div>
    </div>
</div>


<script>
    function DeleteItem(btn) {
        $(btn).closest('tr').remove();
    }
    function AddItem(btn) {
        // Get the table and existing rows
        var table = document.getElementById('JournalVoucherTable').getElementsByTagName('tbody')[0];
        var rows = table.getElementsByTagName('tr');

        // Determine the last row index
        var lastIndex = rows.length ? rows.length - 1 : 0;
        var nextIndex = lastIndex + 1;

        // Clone the last row (template row)
        var newRow = rows[0].cloneNode(true);

        // Update IDs and names for the new row
        newRow.innerHTML = newRow.innerHTML.replace(/\[(\d+)\]/g, '[' + nextIndex + ']'); // Update array indices
        newRow.innerHTML = newRow.innerHTML.replace(/_(\d+)/g, '_' + nextIndex); // Update underscore IDs

        // Clear the input values in the cloned row
        newRow.querySelectorAll('input, select').forEach(function (element) {
            if (element.type === 'text' || element.tagName === 'SELECT') {
                element.value = '';
            }
        });

        // Append the new row to the table
        table.appendChild(newRow);
    }
    
    $(function () {
        $(document).on('focus', '[id^="HeadofAccount_FiveName_"]', function () {
            $(this).autocomplete({
                source: function (request, response) {
                    debugger;
                    $.ajax({
                        url: '/JournalVouchar/GetHeadofAccounts',
                        method: 'GET',
                        data: { searchTerm: request.term },
                        success: function (data) {
                            response(data.map(function (item) {
                                return {
                                    label: item.clientName,
                                    value: item.clientName,
                                    clientID: item.clientID,
                                    location: item.location,
                                    perA: item.perA
                                };
                            }));
                        },
                        error: function (error) {
                            console.error(error);
                        }
                    });
                },
                minLength: 3,
                select: function (event, ui) {
                    console.log(ui.item);
                    $(this).siblings('[id^="HeadofAccount_FiveID_"]').val(ui.item.clientID);
                    $(this).siblings('[id^="DrAmt_"]').val(ui.item.clientID);
                }
            });
        });
    });
    $(function () {
        $('#HeadofAccount_FiveName').autocomplete({
            source: function (request, response) {
                console.log('Search term:', request.term); // Debugging
                $.ajax({
                    url: '/JournalVouchar/GetHeadofAccounts',
                    method: 'GET',
                    data: { searchTerm: request.term },
                    success: function (data) {
                        console.log('Server response:', data); // Debugging
                        response(data.map(function (item) {
                            return {
                                label: item.text, // Use `text` from server
                                value: item.id
                            };
                        }));
                    },
                    error: function (error) {
                        console.error('AJAX error:', error);
                    }
                });
            },
            minLength: 3,
            select: function (event, ui) {
                console.log('Selected item:', ui.item); // Debugging
                $('#HeadofAccount_FiveID').val(ui.item.id); // Set hidden field
                $('#HeadofAccount_FiveName').val(ui.item.text); // Set hidden field
            }
        });
    });

    function calculateTotals() {
        let totalDebit = 0;
        let totalCredit = 0;

        $('#JournalVoucherTable tbody tr').each(function () {
            const debit = parseFloat($(this).find('.debit').val()) || 0;
            const credit = parseFloat($(this).find('.credit').val()) || 0;

            totalDebit += debit;
            totalCredit += credit;
        });

        $('#TotalDrAmt').val(totalDebit.toFixed(2));
        $('#TotalCrAmt').val(totalCredit.toFixed(2));
    }
    $(document).on('input', '.debit, .credit', calculateTotals);
</script>


