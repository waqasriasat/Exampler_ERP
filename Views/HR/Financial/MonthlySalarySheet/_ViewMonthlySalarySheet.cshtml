@model IEnumerable<Exampler_ERP.Models.Temp.MonthlySalarySheetViewModel>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
	var lblSalarySheetDetail = Localizer["lbl_SalarySheetDetail"];
	var lblEmployeeID = Localizer["lbl_EmployeeID"];
	var lblEmployeeName = Localizer["lbl_EmployeeName"];
	var lblMonth = Localizer["lbl_Month"];
	var lblYear = Localizer["lbl_Year"];
	var lblDeservedAmount = Localizer["lbl_DeservedAmount"];
	var lblBranchName = Localizer["lbl_BranchName"];
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
			<h5 class="card-header">@lblSalarySheetDetail</h5>
			<div class="row" style="overflow-y: Overlay; padding: 15px;">
                <div class="col-lg-12 col-md-12 col-sm-12 mb-12">
					<div class="row" style="display: flex; flex-wrap: nowrap; border-bottom-style: inset;">
                        <div class="col-12 col-md-1 col-lg-1">
                            <p class="text-nowrap">@lblEmployeeID</p>
                        </div>
                        <div class="col-12 col-md-2 col-lg-2">
							<p class="text-nowrap">@lblEmployeeName</p>
                        </div>
                        <div class="col-12 col-md-1 col-lg-1">
                            <p class="text-nowrap">@lblMonth"</p>
                        </div>
                        <div class="col-12 col-md-1 col-lg-1">
                            <p class="text-nowrap">@lblYear</p>
                        </div>
                        @foreach (var model in Model)
                        {
                            @foreach (var column in model.SalaryDetails.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">@column</p>
                                </div>
                            }
                            foreach (var column in model.AdditionalAllowances.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">@column</p>
                                </div>
                            }
                            foreach (var column in model.OvertimeDetails.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">@column</p>
                                </div>
                            }
                            foreach (var column in model.Deductions.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">@column</p>
                                </div>
                            }
                            foreach (var column in model.FixedDeductions.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">@column</p>
                                </div>
                            }
                            break;
                        }
                        <div class="col-12 col-md-1 col-lg-1">
                            <p class="text-nowrap">@lblDeservedAmount</p>
                        </div>

                    </div>
                </div>

                @foreach (var model in Model)
                {
                    <div class="col-12 col-md-12 col-lg-12">
						<div class="row" style="display: flex; flex-wrap: nowrap; border-bottom-style: inset;">
                            <div class="col-12 col-md-1 col-lg-1">
                                <p class="text-nowrap">
								    @(model.EmployeeID)
                                </p>
                            </div>
                            <div class="col-12 col-md-2 col-lg-2">
                                <p class="text-nowrap">
                                    @(model.EmployeeName)
                                </p>
                            </div>
                            <div class="col-12 col-md-1 col-lg-1" style="display:none">
                                @*  *@
                                <p class="text-nowrap">
                                     <input type="hidden" id="BranchID" value="@(model.BranchID)" />
                                    @(model.BranchID)
                                </p>
                            </div>
                            <div class="col-12 col-md-1 col-lg-1" style="display:none">
                                @*  *@
                                <p class="text-nowrap">
                                    <input type="hidden" id="MonthID" value="@(model.MonthID)" />
                                    @(model.MonthID)
                                </p>
                            </div>
                            <div class="col-12 col-md-1 col-lg-1">
                                <p class="text-nowrap">
                                    @(model.MonthName)
                                </p>
                            </div>
                            <div class="col-12 col-md-1 col-lg-1">
                                <p class="text-nowrap">
                                    <input type="hidden" id="Year" value="@(model.Year)" />
                                    @(model.Year)
                                </p>
                            </div>
                            @* Dynamically generate cells for Salary Details *@
                            @foreach (var column in Model.First().SalaryDetails.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">
                                        @(
                                            model.SalaryDetails.ContainsKey(column)
                                            ? Math.Round(Convert.ToDouble(model.SalaryDetails[column] ?? 0), 2).ToString("F2")
                                            : "N/A"
                                            )

                                    </p>
                                </div>
                            }


                            @* Dynamically generate cells for Additional Allowances *@
                            @foreach (var column in Model.First().AdditionalAllowances.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">
                                        @(
                                            model.AdditionalAllowances.ContainsKey(column)
                                            ? Math.Round(Convert.ToDouble(model.AdditionalAllowances[column] ?? 0), 2).ToString("F2")
                                            : "N/A"
                                            )
                                    </p>
                                </div>
                            }


                            @* Dynamically generate cells for Overtime Details *@
                            @foreach (var column in Model.First().OvertimeDetails.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">
										@(model.OvertimeDetails.ContainsKey(column)
                                ? Math.Round(Convert.ToDouble(model.OvertimeDetails[column] ?? 0), 2).ToString("F2")
                                : "N/A"
                                )
                                    </p>
                                </div>
                            }


                            @* Dynamically generate cells for Deductions *@
                            @foreach (var column in Model.First().Deductions.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">
										@(model.Deductions.ContainsKey(column)
                                ? Math.Round(Convert.ToDouble(model.Deductions[column] ?? 0), 2).ToString("F2")
                                : "N/A"
                                )
                                    </p>
                                </div>
                            }


                            @* Dynamically generate cells for Fixed Deductions *@
                            @foreach (var column in Model.First().FixedDeductions.Keys)
                            {
                                <div class="col-12 col-md-1 col-lg-1">
                                    <p class="text-nowrap">
                                        @(
                                            model.FixedDeductions.ContainsKey(column)
                                            ? Math.Round(Convert.ToDouble(model.FixedDeductions[column] ?? 0), 2).ToString("F2")
                                            : "N/A"
                                            )

                                    </p>
                                </div>
                            }
                            <div class="col-12 col-md-1 col-lg-1">
                                <p class="text-nowrap">
                                     @(model.DeservedAmount)
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
