@model IEnumerable<Exampler_ERP.Models.HR_Contract>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
	ViewData["Title"] = @Localizer["lbl_Employeement"] + " - " + @Localizer["lbl_Contract"];
}

@section PageScripts {
	<script>
		$(document).ready(function () {
			// Edit contract modal popup
			$('#ContractListContainer').on('click', '.editContractLink', function (e) {
				e.preventDefault();
				var contractId = $(this).data('id');
				$.get('@Url.Action("Edit", "Contract")', { id: contractId }, function (data) {
					$('#editContractModalContainer').html(data);
					$('#editContractModal').modal('show');
				});
			});
			$('#editContractModalContainer').on('click', '#saveContractChanges', function () {
				var formData = $('#editContractForm').serialize();
				$.post('@Url.Action("Edit", "Contract")', formData, function (response) {
					if (response.success) {
							$('#editContractModal').modal('hide');

							// ✅ Ab poora list AJAX se reload karo
							$.get('@Url.Action("Index", "Contract")', function (partialHtml) {
								var html = $(partialHtml).find('#ContractListContainer').html();
								$('#ContractListContainer').html(html);
							});
						}
				});
			});


			// Add new contract modal popup
			$('.addContractLink').click(function () {
				$.get('@Url.Action("Create", "Contract")', function (data) {
					$('#addContractModalContainer').html(data);
					$('#addContractModal').modal('show');
				});
			});

			// Save new contract form
			 $('#addContractModalContainer').on('click', '#saveNewContract', function () {
				var formData = $('#addContractForm').serialize();
				$.post('@Url.Action("Create", "Contract")', formData, function (response) {
				   if (response.success) {
							$('#addContractModal').modal('hide');

							// ✅ Ab poora list AJAX se reload karo
							$.get('@Url.Action("Index", "Contract")', function (partialHtml) {
								var html = $(partialHtml).find('#ContractListContainer').html();
								$('#ContractListContainer').html(html);
							});
						}
				});
			});

			// Close Modal Add Contrainer
			$('#addContractModalContainer').on('click', '#Close', function () {
				$('#addContractModal').modal('hide'); // Close the modal directly
				// Additional logic if needed
			});

			// Close Modal Edit Contrainer
			$('#editContractModalContainer').on('click', '#Close', function () {
				$('#editContractModal').modal('hide'); // Close the modal directly
				// Additional logic if needed
			});

			// Delete contract
			 $('#ContractListContainer').on('click', '.deleteContractLink', function (e) {
				e.preventDefault();
				var contractId = $(this).data('id');

				// Show confirmation dialog
				if (confirm('Are you sure you want to delete this contract?')) {
					$.post('@Url.Action("Delete", "Contract")', { id: contractId }, function (response) {
						if (response.success) {
					$.get('@Url.Action("Index", "Contract")', function (partialHtml) {
					  var html = $(partialHtml).find('#ContractListContainer').html();
					  $('#ContractListContainer').html(html);
					});
				  }
					});
				} else {
					// If user clicks 'No', do nothing
				}
			});

			// Print functionality
			$('#printListButton').click(function () {
				window.print();
			});
			$.widget("custom.autocomplete", $.ui.autocomplete, {
				_renderItem: function (ul, item) {
					return $("<li>")
						.append(item.label)  // Render the HTML content in `label`
						.appendTo(ul);
				}
			});

			$("#EmployeeName").autocomplete({
				source: function (request, response) {
					$.ajax({
						url: '@Url.Action("GetEmployeeSuggestions", "Employee")',
						type: 'GET',
						data: { term: request.term },
						success: function (data) {
							response($.map(data, function (item) {
								return {
									label: item.label,  // HTML content
									value: item.id      // Employee ID
								};
							}));
						}
					});
				},
				minLength: 2,
				select: function (event, ui) {
					// Do something when an employee is selected
					console.log(ui.item.value); // Employee ID
					window.location.href = '@Url.Action("Index", "Contract")?id=' + ui.item.value;
				}
			});


		});
	</script>
	<script>
        function printContractLists() {
              var form = $('<form target="_blank" method="POST" action="@Url.Action("PrintList", "Contract")"></form>');
              form.append($('<input>').attr('name', 'EmployeeID').val($('#EmployeeID').val()));
              form.append($('<input>').attr('name', 'EmployeeName').val($('#EmployeeName').val()));
              form.append($('<input>').attr('name', 'BranchID').val($('#BranchID').val()));
              form.append($('<input>').attr('name', 'DepartmentID').val($('#DepartmentID').val()));
              form.append($('<input>').attr('name', 'DesignationID').val($('#DesignationID').val()));
              $('body').append(form);
              form.submit();
              form.remove();
          }

          function excelContract() {
              var form = $('<form target="_blank" method="POST" action="@Url.Action("ExportToExcel", "Contract")"></form>');
              form.append($('<input>').attr('name', 'EmployeeID').val($('#EmployeeID').val()));
              form.append($('<input>').attr('name', 'EmployeeName').val($('#EmployeeName').val()));
              form.append($('<input>').attr('name', 'BranchID').val($('#BranchID').val()));
              form.append($('<input>').attr('name', 'DepartmentID').val($('#DepartmentID').val()));
              form.append($('<input>').attr('name', 'DesignationID').val($('#DesignationID').val()));
              $('body').append(form);
              form.submit();
              form.remove();
          }
       
		$(document).on('click', '.printContractLink', function (e) {
			e.preventDefault();

			// Get the ContractID from the data-id attribute
			var contractID = $(this).data('id');

			// Call the function to open the print window and pass ContractID
			PrintContract(contractID);
		});
		function PrintContract(contractID) {
			// Construct the URL with the ContractID parameter
			var url = '@Url.Action("Print", "Contract")' + '?id=' + contractID;

			// Open the new window for printing
			var printWindow = window.open(url, '_blank');
			printWindow.focus();
		}
		function closeModal() {
			$('.close').click(function () {
				$('#addContractModal').modal('hide');
				$('#editContractModal').modal('hide');
			});
		}
         $(document).ready(function () {
            $("#EmployeeName").autocomplete({
                source: function (request, response) {
                    $("#EmployeeID").val("");
                    $.ajax({
                        url: '@Url.Action("GetEmployeeSuggestions", "Employee")', // Ensure this matches the C# method
                        type: 'GET',
                        data: { term: request.term },
                        success: function (data) {

                            response($.map(data, function (item) {
                                return {
                                    label: item.label,  // HTML content to be displayed in suggestions
                                    id: item.id,     // Employee ID for the hidden input
                                    name: item.name,      // Full name to be used in the input field
                                    value: item.name
                                };
                            }));
                        }
                    });
                },
                minLength: 2,
                select: function (event, ui) {

                    // Set the selected employee's ID and name
                    $("#EmployeeID").val(ui.item.id); // Set the hidden input for Employee ID
                    $("#EmployeeName").val(ui.item.name); // Set the input field for Employee Name
                }
            });
        $('#searchEmployeeForm').submit(function (e) {
                e.preventDefault(); // Prevent full page reload

                var form = $(this);
                var actionUrl = form.attr('action');

                // Serialize form data
                var formData = form.serialize();

                $.get(actionUrl, formData, function (partialHtml) {
                    // Load only the relevant part of the response
                    var html = $(partialHtml).find('#ContractListContainer').html();
                    $('#ContractListContainer').html(html);
                });
            });
        });
	</script>

}

<h4 class="py-3 mb-4">
	<span class="text-muted fw-light">@Localizer["lbl_Employeement"] /</span> @Localizer["lbl_Contract"]
</h4>
<form id="searchEmployeeForm" method="get" action="@Url.Action("Index", "Contract")">
<div class="row">
    <div class="col-md-12">

        <div class="card">
            <h5 class="card-header">@Localizer["lbl_SearchingBox"]</h5>
            <div class="Searching-Box-padding">
                <div class="row mb-4">
                    <div class="col-md-3 mb-3">
                        <label class="form-label fw-bold">@Localizer["lbl_EmployeeName"]</label>
                            <input type="text" class="form-control" id="EmployeeName" placeholder="@Localizer["lbl_SearchEmployee"]" name="EmployeeName" value="@ViewBag.EmployeeName" />
                            <input type="hidden" class="form-control" id="EmployeeID" placeholder="@Localizer["lbl_SearchEmployee"]" name="EmployeeID" value="@ViewBag.EmployeeID" />
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="form-label fw-bold">@Localizer["lbl_BranchName"]</label>
                        <select name="BranchID" id="BranchID" class="form-control">
                            @foreach (var item in ViewBag.BranchsList)
                            {
                                if (item.Value == ViewBag.BranchID?.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="form-label fw-bold">@Localizer["lbl_DepartmentName"]</label>
                        <select name="DepartmentID" id="DepartmentID" class="form-control">
                            @foreach (var item in ViewBag.DepartmentsList)
                            {
                                if (item.Value == ViewBag.DepartmentID?.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label class="form-label fw-bold">@Localizer["lbl_DesignationName"]</label>
                        <select name="DesignationID" id="DesignationID" class="form-control">
                            @foreach (var item in ViewBag.DesignationsList)
                            {
                                if (item.Value == ViewBag.DesignationID?.ToString())
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    </div>
                    
                    <div class="col-md-12 text-end">
                        <!-- Action Buttons -->
                        <button type="submit" class="btn btn-primary">@Localizer["lbl_Search"]</button>
						<button type="button" class="btn btn-primary addContractLink">@Localizer["lbl_AddNew"]</button>
						<!-- Example: Add buttons for exporting to Excel and printing -->
                            <button type="button" class="btn btn-outline-secondary" onclick="excelContract()">@Localizer["lbl_Excel"]</button>
						<button type="button" class="btn btn-outline-secondary" onclick="printContractLists()">@Localizer["lbl_Print"]</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
</form>
<br />
<div class="row">
	<div class="col-md-12">
		<div class="card">
			<h5 class="card-header">@Localizer["lbl_ContractList"]</h5>
			<div class="">
				<div class="col-lg-12 col-md-12 col-sm-12 mb-12 SmallHide GVHeader">
					<div class="row">
						<div class="col-10 col-md-10 col-lg-9">
							<div class="row">
								<div class="col-6">
									<p class="text-nowrap">@Localizer["lbl_EmployeeName"]</p>
								</div>
								<div class="col-2">
									<p class="text-nowrap">@Localizer["lbl_IssueDate"]</p>
								</div>
								<div class="col-4">
									<p class="text-nowrap">@Localizer["lbl_ContractType"]</p>
								</div>
							</div>
						</div>
						<div class="col-2 col-md-2 col-lg-3">
							<div class="row">
								<div class="col-12 col-md-12 col-lg-4">
									<p class="text-nowrap">@Localizer["lbl_Edit"]</p>
								</div>
								<div class="col-12 col-md-12 col-lg-4">
									<p class="text-nowrap">@Localizer["lbl_Print"] </p>
								</div>
								<div class="col-12 col-md-12 col-lg-4">
									<p class="text-nowrap">@Localizer["lbl_Delete"]</p>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div id="ContractListContainer">
					@Html.Partial("~/Views/HR/Employeement/Contract/_ContractListPartial.cshtml", Model)
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Include the modal partial -->
<div id="editContractModalContainer"></div>
<div id="addContractModalContainer"></div>
