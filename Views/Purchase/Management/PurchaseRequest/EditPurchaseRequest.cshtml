@model Exampler_ERP.Models.Temp.PurchaseRequestIndexViewModel

<style>
    .ui-autocomplete {
        z-index: 1000 !important;
    }

    .center-button {
        margin-top: 32px;
        text-align: center;
    }

    .width-button {
        width: 120px;
    }

    .modal-header {
        padding: 1rem 1.5rem;
    }

    .table th,
    .table td {
        width: 20%; /* Adjust this percentage to match the inputs */
    }

    .form-label,
    .form-control,
    .form-select {
        width: 100%; /* Ensures the input elements stretch to match */
    }

    .table .inputcontrol {
        background-color: transparent;
        border: transparent;
    }

    .table .headercontrol {
        background-color: white;
        border: none;
    }

    .table .headerwidth {
        width: 60%;
    }
</style>

<div class="modal fade" id="editPurchaseRequestModal" tabindex="-1" role="dialog" aria-labelledby="editPurchaseRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="--bs-modal-width: 80rem;">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title" id="editPurchaseRequestModalLabel"><i class="fas fa-key me-2"></i>Edit Purchase Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editPurchaseRequestForm" enctype="multipart/form-data" asp-action="Create" method="post">
                    @Html.Partial("~/Views/Purchase/Management/PurchaseRequest/_EditPurchaseRequest.cshtml", Model)
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="saveChanges" class="btn btn-success">Save</button>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        $('#PurchaseRequestTable tbody').find('tr').each(function () {
        let itemID = $(this).find('select[name*="PurchaseRequests.PurchaseRequestDetails"]').val();
        if (!itemID || itemID === "0") {
            $(this).remove();
        }
    });
        // Add a new row
        $(document).on('click', '.add-row', function () {
            const itemName = $('#ItemName').val();
            const itemText = $('#ItemName option:selected').text();
            const quantity = parseFloat($('#Quantity').val()) || 0;
            const unitName = $('#UnitTypeID').val();
            const unitText = $('#UnitTypeID option:selected').text();
            const priorityLevelName = $('#PriorityLevel').val();
            const priorityLevelText = $('#PriorityLevel option:selected').text();

            if (!itemName || quantity <= 0 ) {
              debugger;
                alert('Please fill out all required fields: Item Name and Quantity.');
                return;
            }
            const tableBody = $('#PurchaseRequestTable tbody');
            const rowCount = tableBody.find('tr').length;

            const dynamicRow = `
                <tr>
                    <td class="col-md-4">
                        <input type="hidden" name="PurchaseRequests.PurchaseRequestDetails[${rowCount}].ItemID" value="${itemName}" />
                        <input type="text" class="form-control inputcontrol" value="${itemText}" readonly />
                    </td>
                    <td class="col-md-2">
                        <input type="hidden" name="PurchaseRequests.PurchaseRequestDetails[${rowCount}].UnitTypeID" value="${unitName}" />
                        <input type="text" class="form-control inputcontrol" value="${unitText}" readonly />
                    </td>
                    <td class="col-md-2">
                        <input type="text" class="form-control inputcontrol" name="PurchaseRequests.PurchaseRequestDetails[${rowCount}].Quantity" value="${quantity}" readonly />
                    </td>
                    <td class="col-md-2">
                        <input type="hidden" name="PurchaseRequests.PurchaseRequestDetails[${rowCount}].PriorityLevel" value="${priorityLevelName}" />
                        <input type="text" class="form-control inputcontrol" value="${priorityLevelText}" readonly />
                    </td>
                    <td class="col-md-2">
                        <button type="button" class="btn btn-sm btn-danger remove-row width-button">Remove</button>
                    </td>
                </tr>`;

            tableBody.append(dynamicRow);

            // Clear input fields
            $('#ItemName').val('');
            $('#UnitTypeID').val('');
            $('#Quantity').val('');
            $('#PriorityLevel').val('');
        });

        // Remove a row
        $(document).on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
            // Update name attributes for proper binding
            $('#PurchaseRequestTable tbody tr').each(function (index) {
                $(this).find('input, select').each(function () {
                    const name = $(this).attr('name');
                    if (name) {
                        const updatedName = name.replace(/\[\d+\]/, `[${index}]`);
                        $(this).attr('name', updatedName);
                    }
                });
            });
        });
    });

</script>
